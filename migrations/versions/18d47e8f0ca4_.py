"""empty message

Revision ID: 18d47e8f0ca4
Revises: None
Create Date: 2016-02-10 01:26:58.390778

"""

# revision identifiers, used by Alembic.
revision = "18d47e8f0ca4"
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import TSVECTOR
from sqlalchemy_searchable import sync_trigger


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "User",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.Column("bookmarks_per_page", sa.Integer(), nullable=True),
        sa.Column("api_key", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("api_key"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "roles_users",
        sa.Column("User_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["User_id"],
            ["User.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
    )
    op.create_table(
        "Bookmarks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=1024), nullable=True),
        sa.Column("description", sa.String(length=256), nullable=True),
        sa.Column("main_url", sa.String(length=2000), nullable=True),
        sa.Column("added_on", sa.DateTime(), nullable=True),
        sa.Column("user", sa.Integer(), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column("search_vector", TSVECTOR),
        sa.Column("readability_html", sa.Text(), nullable=True),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("full_text", sa.Text(), nullable=True),
        sa.Column("fulltext_vector", TSVECTOR),
        sa.ForeignKeyConstraint(
            ["user"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    sync_trigger(conn, "Bookmarks", "fulltext_vector", ["full_text"])
    sync_trigger(conn, "Bookmarks", "search_vector", ["title", "description"])
    op.create_table(
        "tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(length=255), nullable=True),
        sa.Column("user", sa.Integer(), nullable=True),
        sa.Column("count", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tab",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("tabs", sa.PickleType(), nullable=True),
        sa.Column("added_on", sa.DateTime(), nullable=True),
        sa.Column("user", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Archive",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("web_page", sa.Integer(), nullable=True),
        sa.Column("service", sa.String(length=2048), nullable=True),
        sa.Column("archived_on", sa.DateTime(), nullable=True),
        sa.Column("archive_url", sa.String(length=2000), nullable=True),
        sa.Column("status", sa.String(length=2000), nullable=True),
        sa.ForeignKeyConstraint(
            ["web_page"],
            ["Bookmarks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    op.drop_table("Archive")
    op.drop_table("tab")
    op.drop_table("tag")
    sync_trigger(conn, "Bookmarks", "fulltext_vector", ["full_text"])
    sync_trigger(conn, "Bookmarks", "search_vector", ["title", "description"])
    op.drop_table("Bookmarks")
    op.drop_table("roles_users")
    op.drop_table("User")
    op.drop_table("role")
    ### end Alembic commands ###
